<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>文章 on 大数据创新中心</title><link>https://yulongbb.cn/post/</link><description>Recent content in 文章 on 大数据创新中心</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 02 Jan 2021 12:00:00 -0500</lastBuildDate><atom:link href="https://yulongbb.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker部署MongoDB副本集</title><link>https://yulongbb.cn/post/docker%E9%83%A8%E7%BD%B2mongodb%E5%89%AF%E6%9C%AC%E9%9B%86/</link><pubDate>Sun, 17 Jan 2021 15:39:26 +0800</pubDate><guid>https://yulongbb.cn/post/docker%E9%83%A8%E7%BD%B2mongodb%E5%89%AF%E6%9C%AC%E9%9B%86/</guid><description>步骤 1: 拉取mongo镜像 docker pull mongo 2: 启动三个容器实例 docker run -dit -p 30001:27017 --name mongo1 --net my-mongo-cluster mongo mongod --replSet my-mongo-set docker run -dit -p 30002:27017 --name mongo2 --net my-mongo-cluster mongo mongod --replSet my-mongo-set docker run -dit -p 30003:27017 --name mongo3 --net my-mongo-cluster mongo mongod --replSet my-mongo-set 3:配置副本集 docker exec -it mongo1 mongo &amp;gt; db = (new Mongo(&amp;#39;localhost:27017&amp;#39;)).</description></item><item><title>常用软件应用Docker部署文档（持续更新）</title><link>https://yulongbb.cn/post/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8docker%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</link><pubDate>Tue, 12 Jan 2021 11:11:17 +0800</pubDate><guid>https://yulongbb.cn/post/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8docker%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</guid><description>Nginx 开源Web服务器和反向代理服务器
拉取镜像docker pull nginx</description></item><item><title>常用软件应用离线部署文档（持续更新）</title><link>https://yulongbb.cn/post/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</link><pubDate>Tue, 12 Jan 2021 11:04:25 +0800</pubDate><guid>https://yulongbb.cn/post/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</guid><description>JDK JAVA运行环境
检查JDK命令 java -version</description></item><item><title>ELK集群搭建</title><link>https://yulongbb.cn/post/elk%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</link><pubDate>Fri, 08 Jan 2021 15:58:55 +0800</pubDate><guid>https://yulongbb.cn/post/elk%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</guid><description>介绍 ELK是三个开源项目的首字母缩写，这三个项目分别是：Elasticsearch、Logstash 和 Kibana。
Elasticsearch 是一个搜索和分析引擎。一个ElasticSearch集群由一个或多个节点(Node)组成，每个集群都有一个共同的集群名称作为标识。一个ElasticSearch实例即一个Node，一台机器可以有多个实例，正常使用下每个实例应该会部署在不同机器上。ElasticSearch的配置文件中可以通过node.</description></item><item><title>MongoDB副本集Replica Set集群搭建</title><link>https://yulongbb.cn/post/mongodb%E5%89%AF%E6%9C%AC%E9%9B%86replica-set%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</link><pubDate>Sun, 03 Jan 2021 12:00:00 -0500</pubDate><guid>https://yulongbb.cn/post/mongodb%E5%89%AF%E6%9C%AC%E9%9B%86replica-set%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</guid><description>介绍 mongodb集群的搭建包括副本集（Replica Set）和分片（Sharding）两种模式。这两种模式的选择是通过数据量和并发量来权衡。当数据量小（GB级别）时副本集方案可以满足，当数据量大（TB级别）且并发压力大的时候通常采用分片模式。
这两种既有自己的优势也有自己的缺点，比如sharding模式分片越多，性能自然下降越多。
副本集的有点可以实现数据库异地备份、读写分离、故障转移</description></item><item><title>使用Github Actions部署静态网站</title><link>https://yulongbb.cn/post/%E4%BD%BF%E7%94%A8github-actions%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/</link><pubDate>Sat, 02 Jan 2021 12:00:00 -0500</pubDate><guid>https://yulongbb.cn/post/%E4%BD%BF%E7%94%A8github-actions%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/</guid><description>介绍 HUGO是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。
GitHub Actions是一个CI / CD工具，用于自动化GitHub中的测试，构建和部署过程。</description></item></channel></rss>